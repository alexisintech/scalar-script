components:
  parameters:
    LimitParameter:
      name: limit
      in: query
      description: |-
        Applies a limit to the number of results returned.
        Can be used for paginating the results together with `offset`.
      required: false
      schema:
        type: number
        default: 10
        minimum: 1
        maximum: 500
    OffsetParameter:
      name: offset
      in: query
      description: |-
        Skip the first `offset` results when paginating.
        Needs to be an integer greater or equal to zero.
        To be used in conjunction with `limit`.
      required: false
      schema:
        type: number
        default: 0
        minimum: 0

PublicInterstitial:
  get:
    security: []
    summary: Returns the markup for the interstitial page
    description: |-
      The Clerk interstitial endpoint serves an html page that loads clerk.js in order to check the user's authentication state.
      It is used by Clerk SDKs when the user's authentication state cannot be immediately determined.
    operationId: GetPublicInterstitial
    tags:
      - Miscellaneous
    parameters:
      - name: frontendApi
        in: query
        required: false
        description: The Frontend API key of your instance
        schema:
          type: string
      - name: publishable_key
        in: query
        required: false
        description: The publishable key of your instance
        schema:
          type: string
    responses:
      "200":
        description: The interstitial page markup
      "400":
        description: A required query parameter is missing
      "500":
        description: An infinite redirect loop was detected
#
# Authenticated endpoints
#

#
# JWKS
#

JWKS:
  get:
    operationId: GetJWKS
    summary: Retrieve the JSON Web Key Set of the instance
    description: Retrieve the JSON Web Key Set of the instance
    tags:
      - JWKS
    responses:
      "200":
        description: The JSON Web Key Set

#
# CLIENTS
#
Clients:
  get:
    deprecated: true
    operationId: GetClientList
    tags:
      - Clients
    summary: List all clients
    description: |-
      Returns a list of all clients. The clients are returned sorted by creation date,
      with the newest clients appearing first.
      Warning: the endpoint is being deprecated and will be removed in future versions.
    parameters:
      - $ref: "#/components/parameters/LimitParameter"
      - $ref: "#/components/parameters/OffsetParameter"
    responses:
      "200":
        $ref: "../responses/2021-02-05/Client.yml#/components/responses/Client.List"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"
      "410":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/DeprecatedEndpoint"

ClientVerify:
  post:
    operationId: VerifyClient
    tags:
      - Clients
    summary: Verify a client
    description: |-
      Verifies the client in the provided token
    requestBody:
      description: Parameters.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              token:
                type: string
                description: A JWT Token that represents the active client.
    responses:
      "200":
        $ref: "../responses/2021-02-05/Client.yml#/components/responses/Client"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

Client:
  get:
    operationId: GetClient
    tags:
      - Clients
    summary: Get a client
    description: |-
      Returns the details of a client.
    parameters:
      - name: client_id
        in: path
        description: Client ID.
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/Client.yml#/components/responses/Client"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# EMAIL ADDRESSES
#

EmailAddresses:
  post:
    operationId: CreateEmailAddress
    tags:
      - Email Addresses
    summary: Create an email address
    description: Create a new email address
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                type: string
                description: The ID representing the user
              email_address:
                type: string
                description: The new email address. Must adhere to the RFC 5322 specification for email address format.
              verified:
                type: boolean
                description: When created, the email address will be marked as verified.
                nullable: true
              primary:
                type: boolean
                description: |-
                  Create this email address as the primary email address for the user.
                  Default: false, unless it is the first email address.
                nullable: true
    responses:
      "200":
        $ref: "../responses/2021-02-05/EmailAddress.yml#/components/responses/EmailAddress"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

EmailAddress:
  get:
    operationId: GetEmailAddress
    tags:
      - Email Addresses
    summary: Retrieve an email address
    description: Returns the details of an email address.
    parameters:
      - name: email_address_id
        in: path
        description: The ID of the email address to retrieve
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/EmailAddress.yml#/components/responses/EmailAddress"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
  delete:
    operationId: DeleteEmailAddress
    tags:
      - Email Addresses
    summary: Delete an email address
    description: Delete the email address with the given ID
    parameters:
      - name: email_address_id
        in: path
        description: The ID of the email address to delete
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../../../openapi/responses/2021-02-05/DeletedObject.yml#/components/responses/DeletedObject"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
  patch:
    operationId: UpdateEmailAddress
    tags:
      - Email Addresses
    summary: Update an email address
    description: Updates an email address.
    parameters:
      - name: email_address_id
        in: path
        description: The ID of the email address to update
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              verified:
                type: boolean
                description: The email address will be marked as verified.
                nullable: true
              primary:
                type: boolean
                description: Set this email address as the primary email address for the user.
                nullable: true
    responses:
      "200":
        $ref: "../responses/2021-02-05/EmailAddress.yml#/components/responses/EmailAddress"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# PHONE NUMBERS
#

PhoneNumbers:
  post:
    operationId: CreatePhoneNumber
    tags:
      - Phone Numbers
    summary: Create a phone number
    description: Create a new phone number
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                type: string
                description: The ID representing the user
              phone_number:
                type: string
                description: The new phone number. Must adhere to the E.164 standard for phone number format.
              verified:
                type: boolean
                description: When created, the phone number will be marked as verified.
                nullable: true
              primary:
                type: boolean
                description: |-
                  Create this phone number as the primary phone number for the user.
                  Default: false, unless it is the first phone number.
                nullable: true
              reserved_for_second_factor:
                type: boolean
                description: |-
                  Create this phone number as reserved for multi-factor authentication.
                  The phone number must also be verified.
                  If there are no other reserved second factors, the phone number will be set as the default second factor.
                nullable: true
    responses:
      "200":
        $ref: "../responses/2021-02-05/PhoneNumber.yml#/components/responses/PhoneNumber"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

PhoneNumber:
  get:
    operationId: GetPhoneNumber
    tags:
      - Phone Numbers
    summary: Retrieve a phone number
    description: Returns the details of a phone number
    parameters:
      - name: phone_number_id
        in: path
        description: The ID of the phone number to retrieve
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/PhoneNumber.yml#/components/responses/PhoneNumber"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
  delete:
    operationId: DeletePhoneNumber
    tags:
      - Phone Numbers
    summary: Delete a phone number
    description: Delete the phone number with the given ID
    parameters:
      - name: phone_number_id
        in: path
        description: The ID of the phone number to delete
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../../../openapi/responses/2021-02-05/DeletedObject.yml#/components/responses/DeletedObject"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
  patch:
    operationId: UpdatePhoneNumber
    tags:
      - Phone Numbers
    summary: Update a phone number
    description: Updates a phone number
    parameters:
      - name: phone_number_id
        in: path
        description: The ID of the phone number to update
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              verified:
                type: boolean
                description: The phone number will be marked as verified.
                nullable: true
              primary:
                type: boolean
                description: Set this phone number as the primary phone number for the user.
                nullable: true
              reserved_for_second_factor:
                type: boolean
                description: |-
                  Set this phone number as reserved for multi-factor authentication.
                  The phone number must also be verified.
                  If there are no other reserved second factors, the phone number will be set as the default second factor.
                nullable: true
    responses:
      "200":
        $ref: "../responses/2021-02-05/PhoneNumber.yml#/components/responses/PhoneNumber"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# SESSIONS
#

Sessions:
  get:
    operationId: GetSessionList
    tags:
      - Sessions
    summary: List all sessions
    description: |-
      Returns a list of all sessions.
      The sessions are returned sorted by creation date, with the newest sessions appearing first.
      **Deprecation Notice (2024-01-01):** All parameters were initially considered optional, however
      moving forward at least one of `client_id` or `user_id` parameters should be provided.
    parameters:
      - name: client_id
        in: query
        required: false
        description: List sessions for the given client
        schema:
          type: string
      - name: user_id
        in: query
        required: false
        description: List sessions for the given user
        schema:
          type: string
      - name: status
        in: query
        required: false
        description: Filter sessions by the provided status
        schema:
          type: string
          enum:
            - abandoned
            - active
            - ended
            - expired
            - removed
            - replaced
            - revoked
      - $ref: "#/components/parameters/LimitParameter"
      - $ref: "#/components/parameters/OffsetParameter"
    responses:
      "200":
        $ref: "../responses/2021-02-05/Session.yml#/components/responses/Session.List"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

Session:
  get:
    operationId: GetSession
    tags:
      - Sessions
    summary: Retrieve a session
    description: Retrieve the details of a session
    parameters:
      - name: session_id
        in: path
        description: The ID of the session
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/Session.yml#/components/responses/Session"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

SessionRevoke:
  post:
    operationId: RevokeSession
    tags:
      - Sessions
    summary: Revoke a session
    description: |-
      Sets the status of a session as "revoked", which is an unauthenticated state.
      In multi-session mode, a revoked session will still be returned along with its client object, however the user will need to sign in again.
    parameters:
      - name: session_id
        in: path
        description: The ID of the session
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/Session.yml#/components/responses/Session"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

SessionVerify:
  post:
    deprecated: true
    operationId: VerifySession
    tags:
      - Sessions
    summary: Verify a session
    description: |-
      Returns the session if it is authenticated, otherwise returns an error.
      WARNING: This endpoint is deprecated and will be removed in future versions. We strongly recommend switching to networkless verification using short-lived session tokens,
               which is implemented transparently in all recent SDK versions (e.g. [NodeJS SDK](https://clerk.com/docs/backend-requests/handling/nodejs#clerk-express-require-auth)).
               For more details on how networkless verification works, refer to our [Session Tokens documentation](https://clerk.com/docs/backend-requests/resources/session-tokens).
    parameters:
      - name: session_id
        in: path
        description: The ID of the session
        required: true
        schema:
          type: string
    requestBody:
      description: Parameters.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              token:
                type: string
                description: |-
                  The JWT that is sent via the `__session` cookie from your frontend.
                  Note: this JWT must be associated with the supplied session ID.
    responses:
      "200":
        $ref: "../responses/2021-02-05/Session.yml#/components/responses/Session"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "410":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/DeprecatedEndpoint"

SessionTokensTemplate:
  post:
    operationId: CreateSessionTokenFromTemplate
    tags:
      - Sessions
    summary: Create a session token from a jwt template
    description: |-
      Creates a JSON Web Token(JWT) based on a session and a JWT Template name defined for your instance
    parameters:
      - name: session_id
        in: path
        description: The ID of the session
        required: true
        schema:
          type: string
      - name: template_name
        in: path
        description: The name of the JWT Template defined in your instance (e.g. `custom_hasura`).
        required: true
        schema:
          type: string
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  enum:
                    - token
                jwt:
                  type: string
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# EMAIL & SMS TEMPLATES
#

TemplatesType:
  get:
    operationId: GetTemplateList
    summary: List all templates
    description: |-
      Returns a list of all templates.
      The templates are returned sorted by position.
    tags:
      - Email & SMS Templates
    parameters:
      - name: template_type
        in: path
        description: The type of templates to list (email or SMS)
        required: true
        schema:
          type: string
          enum:
            - email
            - sms
    responses:
      "200":
        $ref: "../responses/2021-02-05/Template.yml#/components/responses/Template.List"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

Template:
  get:
    operationId: GetTemplate
    summary: Retrieve a template
    description: Returns the details of a template
    tags:
      - Email & SMS Templates
    parameters:
      - name: template_type
        in: path
        description: The type of templates to retrieve (email or SMS)
        required: true
        schema:
          type: string
          enum:
            - email
            - sms
      - name: slug
        in: path
        description: The slug (i.e. machine-friendly name) of the template to retrieve
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/Template.yml#/components/responses/Template"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
  put:
    operationId: UpsertTemplate
    summary: Update a template for a given type and slug
    description: Updates the existing template of the given type and slug
    tags:
      - Email & SMS Templates
    parameters:
      - name: template_type
        in: path
        description: The type of template to update
        required: true
        schema:
          type: string
          enum:
            - email
            - sms
      - name: slug
        in: path
        description: The slug of the template to update
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              name:
                type: string
                description: The user-friendly name of the template
              subject:
                type: string
                description: |-
                  The email subject.
                  Applicable only to email templates.
                nullable: true
              markup:
                type: string
                description: The editor markup used to generate the body of the template
                nullable: true
              body:
                type: string
                description: The template body before variable interpolation
              delivered_by_clerk:
                type: boolean
                description: Whether Clerk should deliver emails or SMS messages based on the current template
                nullable: true
              from_email_name:
                type: string
                description: |-
                  The local part of the From email address that will be used for emails.
                  For example, in the address 'hello@example.com', the local part is 'hello'.
                  Applicable only to email templates.
              reply_to_email_name:
                type: string
                description: |-
                  The local part of the Reply To email address that will be used for emails.
                  For example, in the address 'hello@example.com', the local part is 'hello'.
                  Applicable only to email templates.
    responses:
      "200":
        $ref: "../responses/2021-02-05/Template.yml#/components/responses/Template"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"
#    delete:
#      operationId: DeleteTemplate
#      summary: Delete a template
#      description: Deletes a custom user template
#      tags:
#        - Email & SMS Templates
#      parameters:
#        - name: template_type
#          in: path
#          description: The type of template to delete
#          required: true
#          schema:
#            type: string
#            enum:
#              - email
#              - sms
#        - name: slug
#          in: path
#          description: The slug of the template to delete
#          required: true
#          schema:
#            type: string
#      responses:
#        "200":
#          $ref: "../../../openapi/responses/2021-02-05/DeletedObject.yml#/components/responses/DeletedObject"
#        "400":
#          $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
#        "401":
#          $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
#        "402":
#          $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
#        "404":
#          $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"

TemplateRevert:
  post:
    operationId: RevertTemplate
    summary: Revert a template
    description: Reverts an updated template to its default state
    tags:
      - Email & SMS Templates
    parameters:
      - name: template_type
        in: path
        description: The type of template to revert
        required: true
        schema:
          type: string
          enum:
            - email
            - sms
      - name: slug
        in: path
        description: The slug of the template to revert
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/Template.yml#/components/responses/Template"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

TemplatePreview:
  post:
    operationId: PreviewTemplate
    summary: Preview changes to a template
    description: Returns a preview of a template for a given template_type, slug and body
    tags:
      - Email & SMS Templates
    parameters:
      - name: template_type
        in: path
        description: The type of template to preview
        required: true
        schema:
          type: string
      - name: slug
        in: path
        description: The slug of the template to preview
        required: true
        schema:
          type: string
    requestBody:
      description: Required parameters
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              subject:
                type: string
                description: |-
                  The email subject.
                  Applicable only to email templates.
                nullable: true
              body:
                type: string
                description: The template body before variable interpolation
              from_email_name:
                type: string
                description: |-
                  The local part of the From email address that will be used for emails.
                  For example, in the address 'hello@example.com', the local part is 'hello'.
                  Applicable only to email templates.
              reply_to_email_name:
                type: string
                description: |-
                  The local part of the Reply To email address that will be used for emails.
                  For example, in the address 'hello@example.com', the local part is 'hello'.
                  Applicable only to email templates.
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              type: object
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

TemplateToggleDelivery:
  post:
    operationId: ToggleTemplateDelivery
    summary: Toggle the delivery by Clerk for a template of a given type and slug
    description: |-
      Toggles the delivery by Clerk for a template of a given type and slug.
      If disabled, Clerk will not deliver the resulting email or SMS.
      The app developer will need to listen to the `email.created` or `sms.created` webhooks in order to handle delivery themselves.
    tags:
      - Email & SMS Templates
    parameters:
      - name: template_type
        in: path
        description: The type of template to toggle delivery for
        required: true
        schema:
          type: string
          enum:
            - email
            - sms
      - name: slug
        in: path
        description: The slug of the template for which to toggle delivery
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              delivered_by_clerk:
                type: boolean
                description: Whether Clerk should deliver emails or SMS messages based on the current template
                nullable: true
    responses:
      "200":
        $ref: "../responses/2021-02-05/Template.yml#/components/responses/Template"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# USERS
#

Users:
  get:
    operationId: GetUserList
    summary: List all users
    description: |-
      Returns a list of all users.
      The users are returned sorted by creation date, with the newest users appearing first.
    tags:
      - Users
    parameters:
      - name: email_address
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Returns users with the specified email addresses.
          Accepts up to 100 email addresses.
          Any email addresses not found are ignored.
        required: false
      - name: phone_number
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Returns users with the specified phone numbers.
          Accepts up to 100 phone numbers.
          Any phone numbers not found are ignored.
        required: false
      - name: external_id
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Returns users with the specified external ids.
          For each external id, the `+` and `-` can be
          prepended to the id, which denote whether the
          respective external id should be included or
          excluded from the result set.
          Accepts up to 100 external ids.
          Any external ids not found are ignored.
        required: false
      - name: username
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Returns users with the specified usernames.
          Accepts up to 100 usernames.
          Any usernames not found are ignored.
        required: false
      - name: web3_wallet
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Returns users with the specified web3 wallet addresses.
          Accepts up to 100 web3 wallet addresses.
          Any web3 wallet addressed not found are ignored.
        required: false
      - name: user_id
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Returns users with the user ids specified.
          For each user id, the `+` and `-` can be
          prepended to the id, which denote whether the
          respective user id should be included or
          excluded from the result set.
          Accepts up to 100 user ids.
          Any user ids not found are ignored.
        required: false
      - name: organization_id
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Returns users that have memberships to the
          given organizations.
          For each organization id, the `+` and `-` can be
          prepended to the id, which denote whether the
          respective organization should be included or
          excluded from the result set.
          Accepts up to 100 organization ids.
        required: false
      - name: query
        in: query
        description: |-
          Returns users that match the given query.
          For possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user ids, first and last names.
          The query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.
        schema:
          type: string
        required: false
      - name: last_active_at_since
        in: query
        description: |-
          Returns users that had session activity since the given date, with day precision.
          Providing a value with higher precision than day will result in an error.
          Example: use 1700690400000 to retrieve users that had session activity from 2023-11-23 until the current day.
        example: 1700690400000
        schema:
          type: integer
      - $ref: "#/components/parameters/LimitParameter"
      - $ref: "#/components/parameters/OffsetParameter"
      - name: order_by
        in: query
        description: |-
          Allows to return users in a particular order.
          At the moment, you can order the returned users by their `created_at`,`updated_at`,`email_address`,`web3wallet`,`first_name`,`last_name`,`phone_number`,`username`,`last_active_at`,`last_sign_in_at`.
          In order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.
          For example, if you want users to be returned in descending order according to their `created_at` property, you can use `-created_at`.
          If you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,
          if you pass `order_by=username&order_by=created_at`, we will consider only the first `order_by` parameter, which is `username`. The `created_at` parameter will be ignored in this case.
        schema:
          type: string
          default: -created_at
        required: false
    responses:
      "200":
        $ref: "../responses/2021-02-05/User.yml#/components/responses/User.List"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"
  post:
    operationId: CreateUser
    summary: Create a new user
    description: |-
      Creates a new user. Your user management settings determine how you should setup your user model.

      Any email address and phone number created using this method will be marked as verified.

      Note: If you are performing a migration, check out our guide on [zero downtime migrations](https://clerk.com/docs/deployments/migrate-overview).

      A rate limit rule of 20 requests per 10 seconds is applied to this endpoint.
    tags:
      - Users
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              external_id:
                type: string
                description: |-
                  The ID of the user as used in your external systems or your previous authentication solution.
                  Must be unique across your instance.
                nullable: true
              first_name:
                type: string
                description: The first name to assign to the user
                nullable: true
              last_name:
                type: string
                description: The last name to assign to the user
                nullable: true
              email_address:
                type: array
                items:
                  type: string
                description: |-
                  Email addresses to add to the user.
                  Must be unique across your instance.
                  The first email address will be set as the user's primary email address.
              phone_number:
                type: array
                items:
                  type: string
                description: |-
                  Phone numbers to add to the user.
                  Must be unique across your instance.
                  The first phone number will be set as the user's primary phone number.
              web3_wallet:
                type: array
                items:
                  type: string
                description: |-
                  Web3 wallets to add to the user.
                  Must be unique across your instance.
                  The first wallet will be set as the user's primary wallet.
              username:
                type: string
                description: |-
                  The username to give to the user.
                  It must be unique across your instance.
                nullable: true
              password:
                type: string
                description: |-
                  The plaintext password to give the user.
                  Must be at least 8 characters long, and can not be in any list of hacked passwords.
                nullable: true
              password_digest:
                type: string
                description: |-
                  In case you already have the password digests and not the passwords, you can use them for the newly created user via this property.
                  The digests should be generated with one of the supported algorithms.
                  The hashing algorithm can be specified using the `password_hasher` property.
              password_hasher:
                type: string
                description: |-
                  The hashing algorithm that was used to generate the password digest.
                  The algorithms we support at the moment are [bcrypt](https://en.wikipedia.org/wiki/Bcrypt), [bcrypt_sha256_django](https://docs.djangoproject.com/en/4.0/topics/auth/passwords/),
                  [md5](https://en.wikipedia.org/wiki/MD5), pbkdf2_sha256, [pbkdf2_sha256_django](https://docs.djangoproject.com/en/4.0/topics/auth/passwords/),
                  [phpass](https://www.openwall.com/phpass/), [scrypt_firebase](https://firebaseopensource.com/projects/firebase/scrypt/),
                  [scrypt_werkzeug](https://werkzeug.palletsprojects.com/en/3.0.x/utils/#werkzeug.security.generate_password_hash), [sha256](https://en.wikipedia.org/wiki/SHA-2)
                  and the [argon2](https://argon2.online/) variants argon2i and argon2id.

                  If you need support for any particular hashing algorithm, [please let us know](https://clerk.com/support).

                  Note: for password hashers considered insecure (at this moment MD5 and SHA256), the corresponding user password hashes will be transparently migrated to Bcrypt (a secure hasher) upon the user's first successful password sign in.
                  Insecure schemes are marked with `(insecure)` in the list below.

                  Each of the supported hashers expects the incoming digest to be in a particular format. Specifically:

                  **bcrypt:** The digest should be of the following form:

                  `$<algorithm version>$<cost>$<salt & hash>`

                  **bcrypt_sha256_django:** This is the Django-specific variant of Bcrypt, using SHA256 hashing function. The format should be as follows (as exported from Django):

                  `bcrypt_sha256$$<algorithm version>$<cost>$<salt & hash>`

                  **md5** (insecure): The digest should follow the regular form e.g.:

                  `5f4dcc3b5aa765d61d8327deb882cf99`

                  **pbkdf2_sha256:** This is the PBKDF2 algorithm using the SHA256 hashing function. The format should be as follows:

                  `pbkdf2_sha256$<iterations>$<salt>$<hash>`

                  Note: Both the salt and the hash are expected to be base64-encoded.

                  **pbkdf2_sha256_django:** This is the Django-specific variant of PBKDF2 and the digest should have the following format (as exported from Django):

                  `pbkdf2_sha256$<iterations>$<salt>$<hash>`

                  Note: The salt is expected to be un-encoded, the hash is expected base64-encoded.

                  **pbkdf2_sha1:** This is similar to pkbdf2_sha256_django, but with two differences:
                  1. uses sha1 instead of sha256
                  2. accepts the hash as a hex-encoded string

                  The format is the following:

                  `pbkdf2_sha1$<iterations>$<salt>$<hash-as-hex-string>`

                  **phpass:** Portable public domain password hashing framework for use in PHP applications. Digests hashed with phpass have the following sections:

                  The format is the following:

                  `$P$<rounds><salt><encoded-checksum>`

                  - $P$ is the prefix used to identify phpass hashes.
                  - rounds is a single character encoding a 6-bit integer representing the number of rounds used.
                  - salt is eight characters drawn from [./0-9A-Za-z], providing a 48-bit salt.
                  - checksum is 22 characters drawn from the same set, encoding the 128-bit checksum with MD5.

                  **scrypt_firebase:** The Firebase-specific variant of scrypt.
                  The value is expected to have 6 segments separated by the $ character and include the following information:

                  _hash:_ The actual Base64 hash. This can be retrieved when exporting the user from Firebase.
                  _salt:_ The salt used to generate the above hash. Again, this is given when exporting the user.
                  _signer key:_ The base64 encoded signer key.
                  _salt separator:_ The base64 encoded salt separator.
                  _rounds:_ The number of rounds the algorithm needs to run.
                  _memory cost:_ The cost of the algorithm run

                  The first 2 (hash and salt) are per user and can be retrieved when exporting the user from Firebase.
                  The other 4 values (signer key, salt separator, rounds and memory cost) are project-wide settings and can be retrieved from the project's password hash parameters.

                  Once you have all these, you can combine it in the following format and send this as the digest in order for Clerk to accept it:

                  `<hash>$<salt>$<signer key>$<salt separator>$<rounds>$<memory cost>`

                  **scrypt_werkzeug:** The Werkzeug-specific variant of scrypt.

                    The value is expected to have 3 segments separated by the $ character and include the following information:

                    _algorithm args:_ The algorithm used to generate the hash.
                    _salt:_ The salt used to generate the above hash.
                    _hash:_ The actual Base64 hash.

                    The algorithm args are the parameters used to generate the hash and are included in the digest.

                  **argon2i:** Algorithms in the argon2 family generate digests that encode the following information:

                  _version (v):_ The argon version, version 19 is assumed
                  _memory (m):_ The memory used by the algorithm (in kibibytes)
                  _iterations (t):_ The number of iterations to perform
                  _parallelism (p):_ The number of threads to use

                  Parts are demarcated by the `$` character, with the first part identifying the algorithm variant.
                  The middle part is a comma-separated list of the encoding options (memory, iterations, parallelism).
                  The final part is the actual digest.

                  `$argon2i$v=19$m=4096,t=3,p=1$4t6CL3P7YiHBtwESXawI8Hm20zJj4cs7/4/G3c187e0$m7RQFczcKr5bIR0IIxbpO2P0tyrLjf3eUW3M3QSwnLc`

                  **argon2id:** See the previous algorithm for an explanation of the formatting.

                  For the argon2id case, the value of the algorithm in the first part of the digest is `argon2id`:

                  `$argon2id$v=19$m=64,t=4,p=8$Z2liZXJyaXNo$iGXEpMBTDYQ8G/71tF0qGjxRHEmR3gpGULcE93zUJVU`

                  **sha256** (insecure): The digest should be a 64-length hex string, e.g.:

                  `9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08`
                  
                  **sha256_salted** (insecure): The digest should be a 64-length hex string with a salt.

                  The format is the following:
                    `<hash>$<salt>`  
                  
                  The value is expected to have 2 segments separated by the $ character and include the following information:
                    _hash:_ The sha256 hash, a 64-length hex string.
                    _salt:_ The salt used to generate the above hash. Must be between 1 and 1024 bits.

                enum:
                  - argon2i
                  - argon2id
                  - bcrypt
                  - bcrypt_sha256_django
                  - md5
                  - pbkdf2_sha256
                  - pbkdf2_sha256_django
                  - pbkdf2_sha1
                  - phpass
                  - scrypt_firebase
                  - scrypt_werkzeug
                  - sha256
                  - sha256_salted
              skip_password_checks:
                type: boolean
                description: |-
                  When set to `true` all password checks are skipped.
                  It is recommended to use this method only when migrating plaintext passwords to Clerk.
                  Upon migration the user base should be prompted to pick stronger password.
              skip_password_requirement:
                type: boolean
                description: |-
                  When set to `true`, `password` is not required anymore when creating the user and can be omitted.
                  This is useful when you are trying to create a user that doesn't have a password, in an instance that is using passwords.
                  Please note that you cannot use this flag if password is the only way for a user to sign into your instance.
              totp_secret:
                type: string
                description: |-
                  In case TOTP is configured on the instance, you can provide the secret to enable it on the newly created user without the need to reset it.
                  Please note that currently the supported options are:
                  * Period: 30 seconds
                  * Code length: 6 digits
                  * Algorithm: SHA1
              backup_codes:
                type: array
                items:
                  type: string
                description: |-
                  If Backup Codes are configured on the instance, you can provide them to enable it on the newly created user without the need to reset them.
                  You must provide the backup codes in plain format or the corresponding bcrypt digest.
              public_metadata:
                type: object
                description: Metadata saved on the user, that is visible to both your Frontend and Backend APIs
              private_metadata:
                type: object
                description: Metadata saved on the user, that is only visible to your Backend API
              unsafe_metadata:
                type: object
                description: |-
                  Metadata saved on the user, that can be updated from both the Frontend and Backend APIs.
                  Note: Since this data can be modified from the frontend, it is not guaranteed to be safe.
              created_at:
                type: string
                description: |-
                  A custom date/time denoting _when_ the user signed up to the application, specified in RFC3339 format (e.g. `2012-10-20T07:15:20.902Z`).
    responses:
      200:
        $ref: "../responses/2021-02-05/User.yml#/components/responses/User"
      400:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      401:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      403:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      422:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

UsersCount:
  get:
    operationId: GetUsersCount
    summary: Count users
    description: Returns a total count of all users that match the given filtering criteria.
    tags:
      - Users
    parameters:
      - name: email_address
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Counts users with the specified email addresses.
          Accepts up to 100 email addresses.
          Any email addresses not found are ignored.
        required: false
      - name: phone_number
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Counts users with the specified phone numbers.
          Accepts up to 100 phone numbers.
          Any phone numbers not found are ignored.
        required: false
      - name: external_id
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Counts users with the specified external ids.
          Accepts up to 100 external ids.
          Any external ids not found are ignored.
        required: false
      - name: username
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Counts users with the specified usernames.
          Accepts up to 100 usernames.
          Any usernames not found are ignored.
        required: false
      - name: web3_wallet
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Counts users with the specified web3 wallet addresses.
          Accepts up to 100 web3 wallet addresses.
          Any web3 wallet addressed not found are ignored.
        required: false
      - name: user_id
        in: query
        schema:
          type: array
          items:
            type: string
        description: |-
          Counts users with the user ids specified.
          Accepts up to 100 user ids.
          Any user ids not found are ignored.
        required: false
      - name: query
        in: query
        description: |-
          Counts users that match the given query.
          For possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user ids, first and last names.
          The query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.
        schema:
          type: string
        required: false
    responses:
      "200":
        $ref: "../responses/2021-02-05/User.yml#/components/responses/User.Count"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

User:
  get:
    operationId: GetUser
    summary: Retrieve a user
    description: Retrieve the details of a user
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user to retrieve
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/User.yml#/components/responses/User"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

  patch:
    operationId: UpdateUser
    summary: Update a user
    description: |-
      Update a user's attributes.

      You can set the user's primary contact identifiers (email address and phone numbers) by updating the `primary_email_address_id` and `primary_phone_number_id` attributes respectively.
      Both IDs should correspond to verified identifications that belong to the user.

      You can remove a user's username by setting the username attribute to null or the blank string "".
      This is a destructive action; the identification will be deleted forever.
      Usernames can be removed only if they are optional in your instance settings and there's at least one other identifier which can be used for authentication.

      This endpoint allows changing a user's password. When passing the `password` parameter directly you have two further options.
      You can ignore the password policy checks for your instance by setting the `skip_password_checks` parameter to `true`.
      You can also choose to sign the user out of all their active sessions on any device once the password is updated. Just set `sign_out_of_other_sessions` to `true`.
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user to update
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              external_id:
                type: string
                description: |-
                  The ID of the user as used in your external systems or your previous authentication solution.
                  Must be unique across your instance.
                nullable: true
              first_name:
                type: string
                description: The first name to assign to the user
                nullable: true
              last_name:
                type: string
                description: The last name to assign to the user
                nullable: true
              primary_email_address_id:
                type: string
                description: |-
                  The ID of the email address to set as primary.
                  It must be verified, and present on the current user.
              notify_primary_email_address_changed:
                type: boolean
                description: |-
                  If set to `true`, the user will be notified that their primary email address has changed.
                  By default, no notification is sent.
                default: false
              primary_phone_number_id:
                type: string
                description: |-
                  The ID of the phone number to set as primary.
                  It must be verified, and present on the current user.
              primary_web3_wallet_id:
                type: string
                description: |-
                  The ID of the web3 wallets to set as primary.
                  It must be verified, and present on the current user.
              username:
                type: string
                description: |-
                  The username to give to the user.
                  It must be unique across your instance.
                nullable: true
              profile_image_id:
                type: string
                description: The ID of the image to set as the user's profile image
                nullable: true
              password:
                type: string
                description: |-
                  The plaintext password to give the user.
                  Must be at least 8 characters long, and can not be in any list of hacked passwords.
                nullable: true
              password_digest:
                type: string
                description: |-
                  In case you already have the password digests and not the passwords, you can use them for the newly created user via this property.
                  The digests should be generated with one of the supported algorithms.
                  The hashing algorithm can be specified using the `password_hasher` property.
              password_hasher:
                type: string
                description: |-
                  The hashing algorithm that was used to generate the password digest.
                  The algorithms we support at the moment are [bcrypt](https://en.wikipedia.org/wiki/Bcrypt), [bcrypt_sha256_django](https://docs.djangoproject.com/en/4.0/topics/auth/passwords/),
                  [md5](https://en.wikipedia.org/wiki/MD5), pbkdf2_sha256, [pbkdf2_sha256_django](https://docs.djangoproject.com/en/4.0/topics/auth/passwords/),
                  [phpass](https://www.openwall.com/phpass/), [scrypt_firebase](https://firebaseopensource.com/projects/firebase/scrypt/),
                  [sha256](https://en.wikipedia.org/wiki/SHA-2), [scrypt_werkzeug](https://werkzeug.palletsprojects.com/en/3.0.x/utils/#werkzeug.security.generate_password_hash)
                  and the [argon2](https://argon2.online/) variants argon2i and argon2id.

                  If you need support for any particular hashing algorithm, [please let us know](https://clerk.com/support).

                  Note: for password hashers considered insecure (at this moment MD5 and SHA256), the corresponding user password hashes will be transparently migrated to Bcrypt (a secure hasher) upon the user's first successful password sign in.
                  Insecure schemes are marked with `(insecure)` in the list below.

                  Each of the supported hashers expects the incoming digest to be in a particular format. Specifically:

                  **bcrypt:** The digest should be of the following form:

                  `$<algorithm version>$<cost>$<salt & hash>`

                  **bcrypt_sha256_django:** This is the Django-specific variant of Bcrypt, using SHA256 hashing function. The format should be as follows (as exported from Django):

                  `bcrypt_sha256$$<algorithm version>$<cost>$<salt & hash>`

                  **md5** (insecure): The digest should follow the regular form e.g.:

                  `5f4dcc3b5aa765d61d8327deb882cf99`

                  **pbkdf2_sha256:** This is the PBKDF2 algorithm using the SHA256 hashing function. The format should be as follows:

                  `pbkdf2_sha256$<iterations>$<salt>$<hash>`

                  Note: Both the salt and the hash are expected to be base64-encoded.

                  **pbkdf2_sha256_django:** This is the Django-specific variant of PBKDF2 and the digest should have the following format (as exported from Django):

                  `pbkdf2_sha256$<iterations>$<salt>$<hash>`

                  Note: The salt is expected to be un-encoded, the hash is expected base64-encoded.

                  **pbkdf2_sha1:** This is similar to pkbdf2_sha256_django, but with two differences:
                  1. uses sha1 instead of sha256
                  2. accepts the hash as a hex-encoded string

                  The format is the following:

                  `pbkdf2_sha1$<iterations>$<salt>$<hash-as-hex-string>`

                  **phpass:** Portable public domain password hashing framework for use in PHP applications. Digests hashed with phpass have the following sections:

                  The format is the following:

                  `$P$<rounds><salt><encoded-checksum>`

                  - $P$ is the prefix used to identify phpass hashes.
                  - rounds is a single character encoding a 6-bit integer representing the number of rounds used.
                  - salt is eight characters drawn from [./0-9A-Za-z], providing a 48-bit salt.
                  - checksum is 22 characters drawn from the same set, encoding the 128-bit checksum with MD5.

                  **scrypt_firebase:** The Firebase-specific variant of scrypt.
                  The value is expected to have 6 segments separated by the $ character and include the following information:

                  _hash:_ The actual Base64 hash. This can be retrieved when exporting the user from Firebase.
                  _salt:_ The salt used to generate the above hash. Again, this is given when exporting the user.
                  _signer key:_ The base64 encoded signer key.
                  _salt separator:_ The base64 encoded salt separator.
                  _rounds:_ The number of rounds the algorithm needs to run.
                  _memory cost:_ The cost of the algorithm run

                  The first 2 (hash and salt) are per user and can be retrieved when exporting the user from Firebase.
                  The other 4 values (signer key, salt separator, rounds and memory cost) are project-wide settings and can be retrieved from the project's password hash parameters.

                  Once you have all these, you can combine it in the following format and send this as the digest in order for Clerk to accept it:

                  `<hash>$<salt>$<signer key>$<salt separator>$<rounds>$<memory cost>`

                  **scrypt_werkzeug:** The Werkzeug-specific variant of scrypt.

                  The value is expected to have 3 segments separated by the $ character and include the following information:

                  _algorithm args:_ The algorithm used to generate the hash.
                  _salt:_ The salt used to generate the above hash.
                  _hash:_ The actual Base64 hash.

                  The algorithm args are the parameters used to generate the hash and are included in the digest.

                  **argon2i:** Algorithms in the argon2 family generate digests that encode the following information:

                  _version (v):_ The argon version, version 19 is assumed
                  _memory (m):_ The memory used by the algorithm (in kibibytes)
                  _iterations (t):_ The number of iterations to perform
                  _parallelism (p):_ The number of threads to use

                  Parts are demarcated by the `$` character, with the first part identifying the algorithm variant.
                  The middle part is a comma-separated list of the encoding options (memory, iterations, parallelism).
                  The final part is the actual digest.

                  `$argon2i$v=19$m=4096,t=3,p=1$4t6CL3P7YiHBtwESXawI8Hm20zJj4cs7/4/G3c187e0$m7RQFczcKr5bIR0IIxbpO2P0tyrLjf3eUW3M3QSwnLc`

                  **argon2id:** See the previous algorithm for an explanation of the formatting.

                  For the argon2id case, the value of the algorithm in the first part of the digest is `argon2id`:

                  `$argon2id$v=19$m=64,t=4,p=8$Z2liZXJyaXNo$iGXEpMBTDYQ8G/71tF0qGjxRHEmR3gpGULcE93zUJVU`

                  **sha256** (insecure): The digest should be a 64-length hex string, e.g.:

                  `9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08`

                enum:
                  - argon2i
                  - argon2id
                  - bcrypt
                  - bcrypt_sha256_django
                  - md5
                  - pbkdf2_sha256
                  - pbkdf2_sha256_django
                  - pbkdf2_sha1
                  - phpass
                  - scrypt_firebase
                  - scrypt_werkzeug
                  - sha256
              skip_password_checks:
                type: boolean
                description: Set it to `true` if you're updating the user's password and want to skip any password policy settings check. This parameter can only be used when providing a `password`.
                nullable: true
              sign_out_of_other_sessions:
                type: boolean
                description: Set to `true` to sign out the user from all their active sessions once their password is updated. This parameter can only be used when providing a `password`.
                nullable: true
              totp_secret:
                type: string
                description: |-
                  In case TOTP is configured on the instance, you can provide the secret to enable it on the specific user without the need to reset it.
                  Please note that currently the supported options are:
                  * Period: 30 seconds
                  * Code length: 6 digits
                  * Algorithm: SHA1
              backup_codes:
                type: array
                items:
                  type: string
                description: |-
                  If Backup Codes are configured on the instance, you can provide them to enable it on the specific user without the need to reset them.
                  You must provide the backup codes in plain format or the corresponding bcrypt digest.
              public_metadata:
                type: object
                description: Metadata saved on the user, that is visible to both your Frontend and Backend APIs
              private_metadata:
                type: object
                description: Metadata saved on the user, that is only visible to your Backend API
              unsafe_metadata:
                type: object
                description: |-
                  Metadata saved on the user, that can be updated from both the Frontend and Backend APIs.
                  Note: Since this data can be modified from the frontend, it is not guaranteed to be safe.
              delete_self_enabled:
                type: boolean
                description: If true, the user can delete themselves with the Frontend API.
                nullable: true
              create_organization_enabled:
                type: boolean
                description: If true, the user can create organizations with the Frontend API.
                nullable: true
              created_at:
                type: string
                description: |-
                  A custom date/time denoting _when_ the user signed up to the application, specified in RFC3339 format (e.g. `2012-10-20T07:15:20.902Z`).
    responses:
      "200":
        $ref: "../responses/2021-02-05/User.yml#/components/responses/User"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"
  delete:
    operationId: DeleteUser
    summary: Delete a user
    description: Delete the specified user
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user to delete
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../../../openapi/responses/2021-02-05/DeletedObject.yml#/components/responses/DeletedObject"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

# /users/{user_id}/ban:
UserBan:
  post:
    operationId: BanUser
    summary: Ban a user
    description: Marks the given user as banned, which means that all their sessions are revoked and they are not allowed to sign in again.
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user to ban
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/User.yml#/components/responses/User"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"

UserUnban:
  post:
    operationId: UnbanUser
    summary: Unban a user
    description: Removes the ban mark from the given user.
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user to unban
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/User.yml#/components/responses/User"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"

UserLock:
  post:
    operationId: LockUser
    summary: Lock a user
    description: |-
      Marks the given user as locked, which means they are not allowed to sign in again until the lock expires.
      Lock duration can be configured in the instance's restrictions settings.
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user to lock
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/User.yml#/components/responses/User"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"

UserUnlock:
  post:
    operationId: UnlockUser
    summary: Unlock a user
    description: Removes the lock from the given user.
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user to unlock
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/User.yml#/components/responses/User"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"

UserProfileImage:
  post:
    operationId: SetUserProfileImage
    summary: Set user profile image
    description: Update a user's profile image
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user to update the profile image for
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                type: string
                format: binary
    responses:
      "200":
        $ref: "../responses/2021-02-05/User.yml#/components/responses/User"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
  delete:
    operationId: DeleteUserProfileImage
    summary: Delete user profile image
    description: Delete a user's profile image
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user to delete the profile image for
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/User.yml#/components/responses/User"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"

UserMetadata:
  patch:
    operationId: UpdateUserMetadata
    summary: Merge and update a user's metadata
    description: |-
      Update a user's metadata attributes by merging existing values with the provided parameters.

      This endpoint behaves differently than the *Update a user* endpoint.
      Metadata values will not be replaced entirely.
      Instead, a deep merge will be performed.
      Deep means that any nested JSON objects will be merged as well.

      You can remove metadata keys at any level by setting their value to `null`.
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user whose metadata will be updated and merged
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              public_metadata:
                type: object
                description: |-
                  Metadata saved on the user, that is visible to both your frontend and backend.
                  The new object will be merged with the existing value.
              private_metadata:
                type: object
                description: |-
                  Metadata saved on the user that is only visible to your backend.
                  The new object will be merged with the existing value.
              unsafe_metadata:
                type: object
                description: |-
                  Metadata saved on the user, that can be updated from both the Frontend and Backend APIs.
                  The new object will be merged with the existing value.

                  Note: Since this data can be modified from the frontend, it is not guaranteed to be safe.
    responses:
      "200":
        $ref: "../responses/2021-02-05/User.yml#/components/responses/User"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

# OAuth token wallet
# /users/{user_id}/oauth_access_tokens/{provider}:
UserOAuthAccessTokensProvider:
  get:
    operationId: GetOAuthAccessToken
    summary: Retrieve the OAuth access token of a user
    description: |-
      Fetch the corresponding OAuth access token for a user that has previously authenticated with a particular OAuth provider.
      For OAuth 2.0, if the access token has expired and we have a corresponding refresh token, the access token will be refreshed transparently the new one will be returned.
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user for which to retrieve the OAuth access token
        required: true
        schema:
          type: string
      - name: provider
        in: path
        description: The ID of the OAuth provider (e.g. `oauth_google`)
        required: true
        schema:
          type: string
    responses:
      "200":
        description: The OAuth access token of the user, if any.
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties: false
                properties:
                  object:
                    type: string
                  external_account_id:
                    description: External account ID
                    type: string
                  provider_user_id:
                    description: The unique ID of the user in the external provider's system
                    type: string
                  token:
                    type: string
                    description: The access token
                  provider:
                    type: string
                    description: The ID of the provider
                  public_metadata:
                    type: object
                  label:
                    type: string
                    nullable: true
                  scopes:
                    type: array
                    items:
                      type: string
                    description: |-
                      The list of scopes that the token is valid for.
                      Only present for OAuth 2.0 tokens.
                  token_secret:
                    type: string
                    description: |-
                      The token secret. Only present for OAuth 1.0 tokens.
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

# /users/{user_id}/organization_memberships:
UserOrganizationMemberships:
  get:
    operationId: UsersGetOrganizationMemberships
    summary: Retrieve all memberships for a user
    description: Retrieve a paginated list of the user's organization memberships
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user whose organization memberships we want to retrieve
        required: true
        schema:
          type: string
      - $ref: "#/components/parameters/LimitParameter"
      - $ref: "#/components/parameters/OffsetParameter"
    responses:
      200:
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationMemberships"
      403:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"

# /users/{user_id}/verify_password:
UserVerifyPassword:
  post:
    operationId: VerifyPassword
    summary: Verify the password of a user
    description: |-
      Check that the user's password matches the supplied input.
      Useful for custom auth flows and re-verification.
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user for whom to verify the password
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              password:
                type: string
                description: The user password to verify
            required:
              - password
    responses:
      "200":
        description: The provided password was correct.
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                verified:
                  type: boolean
                  nullable: false
      "400":
        description: The user does not have a password set.
      "404":
        description: The user does not exist.
      "422":
        description: The provided password was incorrect.
      "500":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"

# /users/{user_id}/verify_totp:
UserVerifyTOTP:
  post:
    operationId: VerifyTOTP
    summary: Verify a TOTP or backup code for a user
    description: |-
      Verify that the provided TOTP or backup code is valid for the user.
      Verifying a backup code will result it in being consumed (i.e. it will
      become invalid).
      Useful for custom auth flows and re-verification.
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user for whom to verify the TOTP
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              code:
                type: string
                description: The TOTP or backup code to verify
            required:
              - code
    responses:
      "200":
        description: The provided TOTP or backup code was correct.
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                verified:
                  type: boolean
                  nullable: false
                code_type:
                  type: string
                  nullable: false
                  enum:
                    - totp
                    - backup_code
      "400":
        description: The user does not have TOTP configured for their account.
      "404":
        description: The user does not exist.
      "422":
        description: The provided TOTP or backup code was incorrect.
      "500":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"

# /users/{user_id}/mfa:
UserMFA:
  delete:
    operationId: DisableMFA
    summary: Disable a user's MFA methods
    description: |-
      Disable all of a user's MFA methods (e.g. OTP sent via SMS, TOTP on their authenticator app) at once.
    tags:
      - Users
    parameters:
      - name: user_id
        in: path
        description: The ID of the user whose MFA methods are to be disabled
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Successful operation.
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                user_id:
                  type: string
                  nullable: false
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "500":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"

#
# INVITATIONS
#

# /invitations:
Invitations:
  post:
    operationId: CreateInvitation
    summary: Create an invitation
    description: |-
      Creates a new invitation for the given email address and sends the invitation email.
      Keep in mind that you cannot create an invitation if there is already one for the given email address.
      Also, trying to create an invitation for an email address that already exists in your application will result to an error.
    tags:
      - Invitations
    requestBody:
      description: Required parameters
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              email_address:
                type: string
                description: The email address the invitation will be sent to
              public_metadata:
                type: object
                description: |-
                  Metadata that will be attached to the newly created invitation.
                  The value of this property should be a well-formed JSON object.
                  Once the user accepts the invitation and signs up, these metadata will end up in the user's public metadata.
              redirect_url:
                type: string
                description: |-
                  Optional URL which specifies where to redirect the user once they click the invitation link.
                  This is only required if you have implemented a [custom flow](https://clerk.com/docs/authentication/invitations#custom-flow) and you're not using Clerk Hosted Pages or Clerk Components.
              notify:
                type: boolean
                description: |-
                  Optional flag which denotes whether an email invitation should be sent to the given email address.
                  Defaults to true.
                nullable: true
                default: true
              ignore_existing:
                type: boolean
                description: |-
                  Whether an invitation should be created if there is already an existing invitation for this email address, or it's claimed by another user.
                nullable: true
                default: false
            required:
              - email_address
    responses:
      200:
        $ref: "../responses/2021-02-05/Invitations.yml#/components/responses/Invitation"
      400:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      422:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"
  get:
    summary: List all invitations
    description: Returns all non-revoked invitations for your application, sorted by creation date
    operationId: ListInvitations
    parameters:
      - $ref: "#/components/parameters/LimitParameter"
      - $ref: "#/components/parameters/OffsetParameter"
      - in: query
        name: status
        description: Filter invitations based on their status
        required: false
        schema:
          type: string
          enum:
            - pending
            - accepted
            - revoked
    tags:
      - Invitations
    responses:
      200:
        $ref: "../responses/2021-02-05/Invitations.yml#/components/responses/Invitation.List"

# /invitations/{invitation_id}/revoke:
InvitationRevoke:
  post:
    operationId: RevokeInvitation
    summary: Revokes an invitation
    description: |-
      Revokes the given invitation.
      Revoking an invitation will prevent the user from using the invitation link that was sent to them.
      However, it doesn't prevent the user from signing up if they follow the sign up flow.
      Only active (i.e. non-revoked) invitations can be revoked.
    tags:
      - Invitations
    parameters:
      - name: invitation_id
        in: path
        description: The ID of the invitation to be revoked
        required: true
        schema:
          type: string
    responses:
      200:
        $ref: "../responses/2021-02-05/Invitations.yml#/components/responses/Invitation.Revoked"
      400:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      404:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# ALLOW-LIST
#


# /allowlist_identifiers:
AllowlistIdentifiers:
  get:
    operationId: ListAllowlistIdentifiers
    summary: List all identifiers on the allow-list
    description: Get a list of all identifiers allowed to sign up to an instance
    tags:
      - Allow-list / Block-list
    responses:
      "200":
        $ref: "../responses/2021-02-05/AllowlistIdentifier.yml#/components/responses/AllowlistIdentifier.List"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
  post:
    operationId: CreateAllowlistIdentifier
    summary: Add identifier to the allow-list
    description: Create an identifier allowed to sign up to an instance
    tags:
      - Allow-list / Block-list
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              identifier:
                type: string
                description: |-
                  The identifier to be added in the allow-list.
                  This can be an email address, a phone number or a web3 wallet.
              notify:
                type: boolean
                description: |-
                  This flag denotes whether the given identifier will receive an invitation to join the application.
                  Note that this only works for email address and phone number identifiers.
                default: false
            required:
              - identifier
    responses:
      "200":
        $ref: "../responses/2021-02-05/AllowlistIdentifier.yml#/components/responses/AllowlistIdentifier"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

# /allowlist_identifiers/{identifier_id}:
AllowlistIdentifier:
  delete:
    operationId: DeleteAllowlistIdentifier
    summary: Delete identifier from allow-list
    description: Delete an identifier from the instance allow-list
    tags:
      - Allow-list / Block-list
    parameters:
      - name: identifier_id
        in: path
        description: The ID of the identifier to delete from the allow-list
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../../../openapi/responses/2021-02-05/DeletedObject.yml#/components/responses/DeletedObject"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# BLOCK-LIST
#

# /blocklist_identifiers:
BlocklistIdentifiers:
  get:
    operationId: ListBlocklistIdentifiers
    summary: List all identifiers on the block-list
    description: Get a list of all identifiers which are not allowed to access an instance
    tags:
      - Allow-list / Block-list
    responses:
      "200":
        $ref: "../responses/2021-02-05/BlocklistIdentifier.yml#/components/responses/BlocklistIdentifier.List"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
  post:
    operationId: CreateBlocklistIdentifier
    summary: Add identifier to the block-list
    description: Create an identifier that is blocked from accessing an instance
    tags:
      - Allow-list / Block-list
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              identifier:
                type: string
                description: |-
                  The identifier to be added in the block-list.
                  This can be an email address, a phone number or a web3 wallet.
            required:
              - identifier
    responses:
      "200":
        $ref: "../responses/2021-02-05/BlocklistIdentifier.yml#/components/responses/BlocklistIdentifier"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

BlocklistIdentifier:
  delete:
    operationId: DeleteBlocklistIdentifier
    summary: Delete identifier from block-list
    description: Delete an identifier from the instance block-list
    tags:
      - Allow-list / Block-list
    parameters:
      - name: identifier_id
        in: path
        description: The ID of the identifier to delete from the block-list
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../../../openapi/responses/2021-02-05/DeletedObject.yml#/components/responses/DeletedObject"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# BETA FEATURES
#

BetaFeaturesInstanceSettings:
  patch:
    operationId: UpdateInstanceAuthConfig
    summary: Update instance settings
    description: Updates the settings of an instance
    tags:
      - Beta Features
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              restricted_to_allowlist:
                type: boolean
                description: Whether sign up is restricted to email addresses, phone numbers and usernames that are on the allowlist.
                nullable: true
                default: false
              from_email_address:
                type: string
                description: |-
                  The local part of the email address from which authentication-related emails (e.g. OTP code, magic links) will be sent.
                  Only alphanumeric values are allowed.
                  Note that this value should contain only the local part of the address (e.g. `foo` for `foo@example.com`).
                nullable: true
              progressive_sign_up:
                type: boolean
                description: |-
                  Enable the Progressive Sign Up algorithm. Refer to the [docs](https://clerk.com/docs/upgrade-guides/progressive-sign-up) for more info.
                nullable: true
              session_token_template:
                type: string
                description: |-
                  The name of the JWT Template used to augment your session tokens. To disable this, pass an empty string.
                nullable: true
              enhanced_email_deliverability:
                type: boolean
                description: |-
                  The "enhanced_email_deliverability" feature will send emails from "verifications@clerk.dev" instead of your domain.
                  This can be helpful if you do not have a high domain reputation.
                nullable: true
              test_mode:
                type: boolean
                description: |-
                  Toggles test mode for this instance, allowing the use of test email addresses and phone numbers.
                  Defaults to true for development instances.
                nullable: true
    responses:
      "200":
        $ref: "../responses/2021-02-05/InstanceSettings.yml#/components/responses/InstanceSettings"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

BetaFeaturesDomain:
  put:
    deprecated: true
    operationId: UpdateProductionInstanceDomain
    summary: Update production instance domain
    description: |-
      Change the domain of a production instance.

      Changing the domain requires updating the [DNS records](https://clerk.com/docs/deployments/overview#dns-records) accordingly, deploying new [SSL certificates](https://clerk.com/docs/deployments/overview#deploy), updating your Social Connection's redirect URLs and setting the new keys in your code.

      WARNING: Changing your domain will invalidate all current user sessions (i.e. users will be logged out). Also, while your application is being deployed, a small downtime is expected to occur.
    tags:
      - Beta Features
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              home_url:
                type: string
                description: The new home URL of the production instance e.g. https://www.example.com
    responses:
      "202":
        description: Accepted
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"

#
# ACTOR TOKENS
#

ActorTokens:
  post:
    summary: Create actor token
    description: |-
      Create an actor token that can be used to impersonate the given user.
      The `actor` parameter needs to include at least a "sub" key whose value is the ID of the actor (impersonating) user.
    operationId: CreateActorToken
    tags:
      - Actor Tokens
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              user_id:
                type: string
                description: The ID of the user that can use the newly created sign in token.
              actor:
                type: object
                description: |-
                  The actor payload. It needs to include a sub property which should contain the ID of the actor.
                  This whole payload will be also included in the JWT session token.
                example:
                  sub: user_2OEpKhcCN1Lat9NQ0G6puh7q5Rb
              expires_in_seconds:
                type: integer
                description: |-
                  Optional parameter to specify the life duration of the actor token in seconds.
                  By default, the duration is 1 hour.
                default: 3600
              session_max_duration_in_seconds:
                type: integer
                description: |-
                  The maximum duration that the session which will be created by the generated actor token should last.
                  By default, the duration of a session created via an actor token, lasts 30 minutes.
                default: 1800
            required:
              - user_id
              - actor
    responses:
      "200":
        $ref: "../responses/2021-02-05/ActorToken.yml#/components/responses/ActorToken"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

# /actor_tokens/{actor_token_id}/revoke:
ActorTokenRevoke:
  post:
    summary: Revoke actor token
    description: |-
      Revokes a pending actor token.
    operationId: RevokeActorToken
    tags:
      - Actor Tokens
    parameters:
      - name: actor_token_id
        in: path
        description: The ID of the actor token to be revoked.
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/ActorToken.yml#/components/responses/ActorToken"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# Domains
#
Domains:
  get:
    summary: List all instance domains
    description: |-
      Use this endpoint to get a list of all domains for an instance.
      The response will contain the primary domain for the instance and any satellite domains. Each domain in the response contains information about the URLs where Clerk operates and the required CNAME targets.
    operationId: ListDomains
    tags:
      - Domains
    responses:
      200:
        $ref: "../responses/2021-02-05/Domain.yml#/components/responses/Domains"
  post:
    summary: Add a domain
    description: |-
      Add a new domain for your instance.
      Useful in the case of multi-domain instances, allows adding satellite domains to an instance.
      The new domain must have a `name`. The domain name can contain the port for development instances, like `localhost:3000`.
      At the moment, instances can have only one primary domain, so the `is_satellite` parameter must be set to `true`.
      If you're planning to configure the new satellite domain to run behind a proxy, pass the `proxy_url` parameter accordingly.
    operationId: AddDomain
    tags:
      - Domains
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The new domain name. Can contain the port for development instances.
              is_satellite:
                type: boolean
                description: Marks the new domain as satellite. Only `true` is accepted at the moment.
                enum:
                  - true
              proxy_url:
                type: string
                description: The full URL of the proxy which will forward requests to the Clerk Frontend API for this domain. Applicable only to production instances.
            required:
              - name
              - is_satellite
    responses:
      200:
        $ref: "../responses/2021-02-05/Domain.yml#/components/responses/Domain"
      400:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      402:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      422:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

Domain:
  delete:
    operationId: DeleteDomain
    summary: Delete a satellite domain
    description: |-
      Deletes a satellite domain for the instance.
      It is currently not possible to delete the instance's primary domain.
    tags:
      - Domains
    parameters:
      - in: path
        name: domain_id
        required: true
        schema:
          type: string
        description: The ID of the domain that will be deleted. Must be a satellite domain.
    responses:
      200:
        $ref: "../../../openapi/responses/2021-02-05/DeletedObject.yml#/components/responses/DeletedObject"
      403:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      404:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
  patch:
    operationId: UpdateDomain
    summary: Update a domain
    description: |-
      The `proxy_url` can be updated only for production instances.
      Update one of the instance's domains. Both primary and satellite domains can be updated.
      If you choose to use Clerk via proxy, use this endpoint to specify the `proxy_url`.
      Whenever you decide you'd rather switch to DNS setup for Clerk, simply set `proxy_url`
      to `null` for the domain. When you update a production instance's primary domain name,
      you have to make sure that you've completed all the necessary setup steps for DNS and
      emails to work. Expect downtime otherwise. Updating a primary domain's name will also
      update the instance's home origin, affecting the default application paths.
    tags:
      - Domains
    parameters:
      - in: path
        name: domain_id
        required: true
        schema:
          type: string
        description: The ID of the domain that will be updated.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              name:
                type: string
                description: |-
                  The new domain name. For development instances, can contain the port,
                  i.e `myhostname:3000`. For production instances, must be a valid FQDN,
                  i.e `mysite.com`. Cannot contain protocol scheme.
                nullable: true
              proxy_url:
                type: string
                description: |-
                  The full URL of the proxy that will forward requests to Clerk's Frontend API.
                  Can only be updated for production instances.
                nullable: true
    responses:
      200:
        $ref: "../responses/2021-02-05/Domain.yml#/components/responses/Domain"
      400:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      404:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      422:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

Instance:
  patch:
    operationId: UpdateInstance
    summary: Update instance settings
    description: Updates the settings of an instance
    tags:
      - Instance Settings
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              test_mode:
                type: boolean
                description: |-
                  Toggles test mode for this instance, allowing the use of test email addresses and phone numbers.
                  Defaults to true for development instances.
                nullable: true
              hibp:
                type: boolean
                description: Whether the instance should be using the HIBP service to check passwords for breaches
                nullable: true
              enhanced_email_deliverability:
                type: boolean
                description: |-
                  The "enhanced_email_deliverability" feature will send emails from "verifications@clerk.dev" instead of your domain.
                  This can be helpful if you do not have a high domain reputation.
                nullable: true
              support_email:
                type: string
                nullable: true
              clerk_js_version:
                type: string
                nullable: true
              development_origin:
                type: string
                nullable: true
              allowed_origins:
                type: array
                items:
                  type: string
                description: |-
                  For browser-like stacks such as browser extensions, Electron, or Capacitor.js the instance allowed origins need to be updated with the request origin value.
                  For Chrome extensions popup, background, or service worker pages the origin is chrome-extension://extension_uiid. For Electron apps the default origin is http://localhost:3000. For Capacitor, the origin is capacitor://localhost.
              cookieless_dev:
                type: boolean
                description: |-
                  Whether the instance should operate in cookieless development mode (i.e. without third-party cookies).
                  Deprecated: Please use `url_based_session_syncing` instead.
                deprecated: true
              url_based_session_syncing:
                type: boolean
                description: |-
                  Whether the instance should use URL-based session syncing in development mode (i.e. without third-party cookies).

    responses:
      "204":
        description: Accepted
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

InstanceRestrictions:
  patch:
    operationId: UpdateInstanceRestrictions
    summary: Update instance restrictions
    description: Updates the restriction settings of an instance
    tags:
      - Instance Settings
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              allowlist:
                type: boolean
                nullable: true
              blocklist:
                type: boolean
                nullable: true
              block_email_subaddresses:
                type: boolean
                nullable: true
              block_disposable_email_domains:
                type: boolean
                nullable: true
              ignore_dots_for_gmail_addresses:
                type: boolean
                nullable: true
    responses:
      200:
        $ref: "../responses/2021-02-05/InstanceSettings.yml#/components/responses/InstanceRestrictions"
      402:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      422:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

InstanceChangeDomain:
  post:
    operationId: ChangeProductionInstanceDomain
    summary: Update production instance domain
    description: |-
      Change the domain of a production instance.

      Changing the domain requires updating the [DNS records](https://clerk.com/docs/deployments/overview#dns-records) accordingly, deploying new [SSL certificates](https://clerk.com/docs/deployments/overview#deploy), updating your Social Connection's redirect URLs and setting the new keys in your code.

      WARNING: Changing your domain will invalidate all current user sessions (i.e. users will be logged out). Also, while your application is being deployed, a small downtime is expected to occur.
    tags:
      - Beta Features
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              home_url:
                type: string
                description: The new home URL of the production instance e.g. https://www.example.com
    responses:
      "202":
        description: Accepted
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"

InstanceOrganizationSettings:
  patch:
    operationId: UpdateInstanceOrganizationSettings
    summary: Update instance organization settings
    description: Updates the organization settings of the instance
    tags:
      - Instance Settings
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              enabled:
                type: boolean
                nullable: true
              max_allowed_memberships:
                type: integer
                nullable: true
              admin_delete_enabled:
                type: boolean
                nullable: true
              domains_enabled:
                type: boolean
                nullable: true
              domains_enrollment_modes:
                type: array
                items:
                  type: string
                description: |-
                  Specify which enrollment modes to enable for your Organization Domains.
                  Supported modes are 'automatic_invitation' & 'automatic_suggestion'.
              creator_role_id:
                type: string
                description: |-
                  Specify what the default organization role is for an organization creator.
              domains_default_role_id:
                type: string
                description: |-
                  Specify what the default organization role is for the organization domains.
    responses:
      "200":
        $ref: "../responses/2021-02-05/InstanceSettings.yml#/components/responses/OrganizationSettings"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

#
# WEBHOOKS
#

WebhooksSvix:
  post:
    operationId: CreateSvixApp
    summary: Create a Svix app
    description: Create a Svix app and associate it with the current instance
    tags:
      - Webhooks
    responses:
      "200":
        $ref: "../responses/2021-02-05/Webhooks.yml#/components/responses/SvixURL"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
  delete:
    operationId: DeleteSvixApp
    summary: Delete a Svix app
    description: Delete a Svix app and disassociate it from the current instance
    tags:
      - Webhooks
    responses:
      "204":
        description: Svix app was successfully deleted
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"

WebhooksSvixURL:
  post:
    operationId: GenerateSvixAuthURL
    summary: Create a Svix Dashboard URL
    description: Generate a new url for accessing the Svix's management dashboard for that particular instance
    tags:
      - Webhooks
    responses:
      "200":
        $ref: "../responses/2021-02-05/Webhooks.yml#/components/responses/SvixURL"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"

#
# JWT TEMPLATES
#

JWTTemplates:
  get:
    summary: List all templates
    operationId: ListJWTTemplates
    tags:
      - JWT Templates
    responses:
      "200":
        $ref: "../responses/2021-02-05/JWTTemplate.yml#/components/responses/JWTTemplate.List"
  post:
    operationId: CreateJWTTemplate
    summary: Create a JWT template
    description: Create a new JWT template
    tags:
      - JWT Templates
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: JWT template name
                nullable: false
              claims:
                type: object
                description: JWT template claims in JSON format
                nullable: false
              lifetime:
                type: number
                minimum: 30
                maximum: 315360000
                description: JWT token lifetime
                nullable: true
              allowed_clock_skew:
                type: number
                minimum: 0
                maximum: 300
                description: JWT token allowed clock skew
                nullable: true
              custom_signing_key:
                type: boolean
                description: Whether a custom signing key/algorithm is also provided for this template
                nullable: false
              signing_algorithm:
                type: string
                description: The custom signing algorithm to use when minting
                  JWTs
                nullable: true
              signing_key:
                type: string
                description: The custom signing private key to use when minting JWTs
                nullable: true
    responses:
      "200":
        $ref: "../responses/2021-02-05/JWTTemplate.yml#/components/responses/JWTTemplate"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

JWTTemplate:
  get:
    operationId: GetJWTTemplate
    summary: Retrieve a template
    description: Retrieve the details of a given JWT template
    tags:
      - JWT Templates
    parameters:
      - name: template_id
        in: path
        description: JWT Template ID
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/JWTTemplate.yml#/components/responses/JWTTemplate"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

  patch:
    operationId: UpdateJWTTemplate
    summary: Update a JWT template
    description: Updates an existing JWT template
    tags:
      - JWT Templates
    parameters:
      - name: template_id
        in: path
        description: The ID of the JWT template to update
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: JWT template name
                nullable: false
              claims:
                type: object
                description: JWT template claims in JSON format
                nullable: false
              lifetime:
                type: number
                minimum: 30
                maximum: 315360000
                description: JWT token lifetime
                nullable: true
              allowed_clock_skew:
                type: number
                minimum: 0
                maximum: 300
                description: JWT token allowed clock skew
                nullable: true
              custom_signing_key:
                type: boolean
                description: Whether a custom signing key/algorithm is also provided for this template
                nullable: false
              signing_algorithm:
                type: string
                description: The custom signing algorithm to use when minting
                  JWTs
                nullable: true
              signing_key:
                type: string
                description: The custom signing private key to use when minting JWTs
                nullable: true
    responses:
      "200":
        $ref: "../responses/2021-02-05/JWTTemplate.yml#/components/responses/JWTTemplate"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

  delete:
    operationId: DeleteJWTTemplate
    summary: Delete a Template
    description: |-

    tags:
      - JWT Templates
    parameters:
      - name: template_id
        in: path
        description: JWT Template ID
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../../../openapi/responses/2021-02-05/DeletedObject.yml#/components/responses/DeletedObject"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# ORGANIZATIONS
#

Organizations:
  get:
    operationId: ListOrganizations
    summary: Get a list of organizations for an instance
    description: |-
      This request returns the list of organizations for an instance.
      Results can be paginated using the optional `limit` and `offset` query parameters.
      The organizations are ordered by descending creation date.
      Most recent organizations will be returned first.
    tags:
      - Organizations
    parameters:
      - $ref: "#/components/parameters/LimitParameter"
      - $ref: "#/components/parameters/OffsetParameter"
      - in: query
        required: false
        name: include_members_count
        description: |-
          Flag to denote whether the member counts of each organization should be included in the response or not.
        schema:
          type: boolean
      - in: query
        required: false
        name: query
        description: |-
          Returns organizations with ID, name, or slug that match the given query.
          Uses exact match for organization ID and partial match for name and slug.
        schema:
          type: string
      - in: query
        name: order_by
        description: |-
          Allows to return organizations in a particular order.
          At the moment, you can order the returned organizations either by their `name`, `created_at` or `members_count`.
          In order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.
          For example, if you want organizations to be returned in descending order according to their `created_at` property, you can use `-created_at`.
          If you don't use `+` or `-`, then `+` is implied.
          Defaults to `-created_at`.
        schema:
          type: string
          default: -created_at
        required: false
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/Organizations"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"
  post:
    operationId: CreateOrganization
    summary: Create an organization
    description: |-
      Creates a new organization with the given name for an instance.
      In order to successfully create an organization you need to provide the ID of the User who will become the organization administrator.
      You can specify an optional slug for the new organization.
      If provided, the organization slug can contain only lowercase alphanumeric characters (letters and digits) and the dash "-".
      Organization slugs must be unique for the instance.
      You can provide additional metadata for the organization and set any custom attribute you want.
      Organizations support private and public metadata.
      Private metadata can only be accessed from the Backend API.
      Public metadata can be accessed from the Backend API, and are read-only from the Frontend API.
    tags:
      - Organizations
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the new organization
              created_by:
                type: string
                description: The ID of the User who will become the administrator for the new organization
              private_metadata:
                type: object
                description: Metadata saved on the organization, accessible only from the Backend API
              public_metadata:
                type: object
                description: Metadata saved on the organization, read-only from the Frontend API and fully accessible (read/write) from the Backend API
              slug:
                type: string
                description: |-
                  A slug for the new organization.
                  Can contain only lowercase alphanumeric characters and the dash "-".
                  Must be unique for the instance.
              max_allowed_memberships:
                type: integer
                description: The maximum number of memberships allowed for this organization
            required:
              - name
              - created_by
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/Organization"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

Organization:
  get:
    operationId: GetOrganization
    summary: Retrieve an organization by ID or slug
    description: |-
      Fetches the organization whose ID or slug matches the provided `id_or_slug` URL query parameter.
    tags:
      - Organizations
    parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          type: string
        description: The ID or slug of the organization
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/Organization"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

  patch:
    operationId: UpdateOrganization
    summary: Update an organization
    description: Updates an existing organization
    tags:
      - Organizations
    parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          type: string
        description: The ID of the organization to update
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              public_metadata:
                type: object
                description: |-
                  Metadata saved on the organization, that is visible to both your frontend and backend.
              private_metadata:
                type: object
                description: |-
                  Metadata saved on the organization that is only visible to your backend.
              name:
                type: string
                description: The new name of the organization
                nullable: true
              slug:
                type: string
                description: The new slug of the organization, which needs to be unique in the instance
                nullable: true
              max_allowed_memberships:
                type: integer
                description: The maximum number of memberships allowed for this organization
                nullable: true
              admin_delete_enabled:
                type: boolean
                description: If true, an admin can delete this organization with the Frontend API.
                nullable: true
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/Organization"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"
  delete:
    operationId: DeleteOrganization
    summary: Delete an organization
    description: |-
      Deletes the given organization.
      Please note that deleting an organization will also delete all memberships and invitations.
      This is not reversible.
    tags:
      - Organizations
    parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          type: string
        description: The ID of the organization to delete
    responses:
      200:
        $ref: "../../../openapi/responses/2021-02-05/DeletedObject.yml#/components/responses/DeletedObject"
      404:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

OrganizationMetadata:
  patch:
    operationId: MergeOrganizationMetadata
    summary: Merge and update metadata for an organization
    description: |-
      Update organization metadata attributes by merging existing values with the provided parameters.
      Metadata values will be updated via a deep merge.
      Deep meaning that any nested JSON objects will be merged as well.
      You can remove metadata keys at any level by setting their value to `null`.
    tags:
      - Organizations
    parameters:
      - name: organization_id
        in: path
        description: The ID of the organization for which metadata will be merged or updated
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              public_metadata:
                type: object
                description: |-
                  Metadata saved on the organization, that is visible to both your frontend and backend.
                  The new object will be merged with the existing value.
              private_metadata:
                type: object
                description: |-
                  Metadata saved on the organization that is only visible to your backend.
                  The new object will be merged with the existing value.
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/Organization"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

OrganizationLogo:
  put:
    operationId: UploadOrganizationLogo
    summary: Upload a logo for the organization
    description: |-
      Set or replace an organization's logo, by uploading an image file.
      This endpoint uses the `multipart/form-data` request content type and accepts a file of image type.
      The file size cannot exceed 10MB.
      Only the following file content types are supported: `image/jpeg`, `image/png`, `image/gif`, `image/webp`, `image/x-icon`, `image/vnd.microsoft.icon`.
    tags:
      - Organizations
    parameters:
      - name: organization_id
        in: path
        description: The ID of the organization for which to upload a logo
        required: true
        schema:
          type: string
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              uploader_user_id:
                type: string
                description: The ID of the user that will be credited with the image upload.
              file:
                type: string
                format: binary
            required:
              - uploader_user_id
              - file
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationWithLogo"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "413":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
  delete:
    operationId: DeleteOrganizationLogo
    description: Delete the organization's logo.
    tags:
      - Organizations
    parameters:
      - name: organization_id
        in: path
        description: The ID of the organization for which the logo will be deleted.
        required: true
        schema:
          type: string
    responses:
      200:
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/Organization"
      404:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# ORGANIZATION INVITATIONS
#

OrganizationInvitations:
  post:
    operationId: CreateOrganizationInvitation
    summary: Create and send an organization invitation
    description: |-
      Creates a new organization invitation and sends an email to the provided `email_address` with a link to accept the invitation and join the organization.
      You can specify the `role` for the invited organization member.

      New organization invitations get a "pending" status until they are revoked by an organization administrator or accepted by the invitee.

      The request body supports passing an optional `redirect_url` parameter.
      When the invited user clicks the link to accept the invitation, they will be redirected to the URL provided.
      Use this parameter to implement a custom invitation acceptance flow.

      You must specify the ID of the user that will send the invitation with the `inviter_user_id` parameter.
      That user must be a member with administrator privileges in the organization.
      Only "admin" members can create organization invitations.

      You can optionally provide public and private metadata for the organization invitation.
      The public metadata are visible by both the Frontend and the Backend whereas the private ones only by the Backend.
      When the organization invitation is accepted, the metadata will be transferred to the newly created organization membership.
    tags:
      - Organization Invitations
    parameters:
      - in: path
        required: true
        name: organization_id
        schema:
          type: string
        description: The ID of the organization for which to send the invitation
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email_address:
                type: string
                description: The email address of the new member that is going to be invited to the organization
              inviter_user_id:
                type: string
                description: |-
                  The ID of the user that invites the new member to the organization.
                  Must be an administrator in the organization.
              role:
                type: string
                description: The role of the new member in the organization
              public_metadata:
                type: object
                description: |-
                  Metadata saved on the organization invitation, read-only from the Frontend API and fully accessible (read/write) from the Backend API.
              private_metadata:
                type: object
                description: |-
                  Metadata saved on the organization invitation, fully accessible (read/write) from the Backend API but not visible from the Frontend API.
              redirect_url:
                type: string
                description: |-
                  Optional URL that the invitee will be redirected to once they accept the invitation by clicking the join link in the invitation email.
            required:
              - email_address
              - inviter_user_id
              - role
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationInvitation"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

  get:
    operationId: ListOrganizationInvitations
    summary: Get a list of organization invitations
    description: |-
      This request returns the list of organization invitations.
      Results can be paginated using the optional `limit` and `offset` query parameters.
      You can filter them by providing the 'status' query parameter, that accepts multiple values.
      The organization invitations are ordered by descending creation date.
      Most recent invitations will be returned first.
      Any invitations created as a result of an Organization Domain are not included in the results.
    tags:
      - Organization Invitations
    parameters:
      - in: path
        required: true
        name: organization_id
        schema:
          type: string
        description: The organization ID.
      - $ref: "#/components/parameters/LimitParameter"
      - $ref: "#/components/parameters/OffsetParameter"
      - in: query
        name: status
        description: Filter organization invitations based on their status
        required: false
        schema:
          type: string
          enum:
            - pending
            - accepted
            - revoked
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationInvitations"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

OrganizationInvitationsBulk:
  post:
    operationId: CreateOrganizationInvitationBulk
    summary: Bulk create and send organization invitations
    description: |-
      Creates new organization invitations in bulk and sends out emails to the provided email addresses with a link to accept the invitation and join the organization.
      You can specify a different `role` for each invited organization member.
      New organization invitations get a "pending" status until they are revoked by an organization administrator or accepted by the invitee.
      The request body supports passing an optional `redirect_url` parameter for each invitation.
      When the invited user clicks the link to accept the invitation, they will be redirected to the provided URL.
      Use this parameter to implement a custom invitation acceptance flow.
      You must specify the ID of the user that will send the invitation with the `inviter_user_id` parameter. Each invitation
      can have a different inviter user.
      Inviter users must be members with administrator privileges in the organization.
      Only "admin" members can create organization invitations.
      You can optionally provide public and private metadata for each organization invitation. The public metadata are visible
      by both the Frontend and the Backend, whereas the private metadata are only visible by the Backend.
      When the organization invitation is accepted, the metadata will be transferred to the newly created organization membership.
    tags:
      - Organization Invitations
    parameters:
      - in: path
        required: true
        name: organization_id
        schema:
          type: string
        description: The organization ID.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                email_address:
                  type: string
                  description: The email address of the new member that is going to be invited to the organization
                inviter_user_id:
                  type: string
                  description: |-
                    The ID of the user that invites the new member to the organization.
                    Must be an administrator in the organization.
                role:
                  type: string
                  description: The role of the new member in the organization.
                public_metadata:
                  type: object
                  description: |-
                    Metadata saved on the organization invitation, read-only from the Frontend API and fully accessible (read/write) from the Backend API.
                private_metadata:
                  type: object
                  description: |-
                    Metadata saved on the organization invitation, fully accessible (read/write) from the Backend API but not visible from the Frontend API.
                redirect_url:
                  type: string
                  description: |-
                    Optional URL that the invitee will be redirected to once they accept the invitation by clicking the join link in the invitation email.
              required:
                - email_address
                - inviter_user_id
                - role
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationInvitations"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

OrganizationInvitationsPending:
  get:
    deprecated: true
    operationId: ListPendingOrganizationInvitations
    summary: Get a list of pending organization invitations
    description: |-
      This request returns the list of organization invitations with "pending" status.
      These are the organization invitations that can still be used to join the organization, but have not been accepted by the invited user yet.
      Results can be paginated using the optional `limit` and `offset` query parameters.
      The organization invitations are ordered by descending creation date.
      Most recent invitations will be returned first.
      Any invitations created as a result of an Organization Domain are not included in the results.
    tags:
      - Organization Invitations
    parameters:
      - in: path
        required: true
        name: organization_id
        schema:
          type: string
        description: The organization ID.
      - $ref: "#/components/parameters/LimitParameter"
      - $ref: "#/components/parameters/OffsetParameter"
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationInvitations"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

OrganizationInvitation:
  get:
    operationId: GetOrganizationInvitation
    summary: Retrieve an organization invitation by ID
    description: |-
      Use this request to get an existing organization invitation by ID.
    tags:
      - Organization Invitations
    parameters:
      - in: path
        required: true
        name: organization_id
        schema:
          type: string
        description: The organization ID.
      - in: path
        required: true
        name: invitation_id
        schema:
          type: string
        description: The organization invitation ID.
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationInvitation"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

OrganizationInvitationRevoke:
  post:
    operationId: RevokeOrganizationInvitation
    summary: Revoke a pending organization invitation
    description: |-
      Use this request to revoke a previously issued organization invitation.
      Revoking an organization invitation makes it invalid; the invited user will no longer be able to join the organization with the revoked invitation.
      Only organization invitations with "pending" status can be revoked.
      The request needs the `requesting_user_id` parameter to specify the user which revokes the invitation.
      Only users with "admin" role can revoke invitations.
    tags:
      - Organization Invitations
    parameters:
      - in: path
        required: true
        name: organization_id
        schema:
          type: string
        description: The organization ID.
      - in: path
        required: true
        name: invitation_id
        schema:
          type: string
        description: The organization invitation ID.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              requesting_user_id:
                type: string
                description: |-
                  The ID of the user that revokes the invitation.
                  Must be an administrator in the organization.
            required:
              - requesting_user_id
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationInvitation"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# ORGANIZATION MEMBERSHIPS
#

OrganizationMemberships:
  post:
    operationId: CreateOrganizationMembership
    summary: Create a new organization membership
    description: |-
      Adds a user as a member to the given organization.
      Only users in the same instance as the organization can be added as members.
    tags:
      - Organization Memberships
    parameters:
      - in: path
        required: true
        name: organization_id
        schema:
          type: string
        description: The ID of the organization where the new membership will be created
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                type: string
                description: |-
                  The ID of the user that will be added as a member in the organization.
                  The user needs to exist in the same instance as the organization and must not be a member of the given organization already.
              role:
                type: string
                description: |-
                  The role that the new member will have in the organization.
            required:
              - user_id
              - role
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationMembership"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"
  get:
    operationId: ListOrganizationMemberships
    summary: Get a list of all members of an organization
    description: Retrieves all user memberships for the given organization
    tags:
      - Organization Memberships
    parameters:
      - in: path
        required: true
        name: organization_id
        schema:
          type: string
        description: The organization ID.
      - $ref: "#/components/parameters/LimitParameter"
      - $ref: "#/components/parameters/OffsetParameter"
      - in: query
        required: false
        name: order_by
        description: |-
          Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.
          By prepending one of those values with + or -,
          we can choose to sort in ascending (ASC) or descending (DESC) order."
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationMemberships"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

OrganizationMembership:
  patch:
    operationId: UpdateOrganizationMembership
    summary: Update an organization membership
    description: Updates the properties of an existing organization membership
    tags:
      - Organization Memberships
    parameters:
      - in: path
        required: true
        name: organization_id
        schema:
          type: string
        description: The ID of the organization the membership belongs to
      - in: path
        required: true
        name: user_id
        schema:
          type: string
        description: The ID of the user that this membership belongs to
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              role:
                type: string
                description: |-
                  The new role of the given membership.
            required:
              - role
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationMembership"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"
  delete:
    operationId: DeleteOrganizationMembership
    summary: Remove a member from an organization
    description: Removes the given membership from the organization
    tags:
      - Organization Memberships
    parameters:
      - in: path
        required: true
        name: organization_id
        schema:
          type: string
        description: The ID of the organization the membership belongs to
      - in: path
        required: true
        name: user_id
        schema:
          type: string
        description: The ID of the user that this membership belongs to
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationMembership"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "401":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthenticationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

OrganizationMembershipMetadata:
  patch:
    operationId: UpdateOrganizationMembershipMetadata
    summary: Merge and update organization membership metadata
    description: |-
      Update an organization membership's metadata attributes by merging existing values with the provided parameters.
      Metadata values will be updated via a deep merge. Deep means that any nested JSON objects will be merged as well.
      You can remove metadata keys at any level by setting their value to `null`.
    tags:
      - Organization Memberships
    parameters:
      - in: path
        required: true
        name: organization_id
        schema:
          type: string
        description: The ID of the organization the membership belongs to
      - in: path
        required: true
        name: user_id
        schema:
          type: string
        description: The ID of the user that this membership belongs to
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              public_metadata:
                type: object
                description: |-
                  Metadata saved on the organization membership, that is visible to both your frontend and backend.
                  The new object will be merged with the existing value.
              private_metadata:
                type: object
                description: |-
                  Metadata saved on the organization membership that is only visible to your backend.
                  The new object will be merged with the existing value.
    responses:
      "200":
        $ref: "../responses/2021-02-05/Organization.yml#/components/responses/OrganizationMembership"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

ProxyChecks:
  post:
    summary: Verify the proxy configuration for your domain
    description: |-
      This endpoint can be used to validate that a proxy-enabled domain is operational.
      It tries to verify that the proxy URL provided in the parameters maps to a functional proxy that can reach the Clerk Frontend API.

      You can use this endpoint before you set a proxy URL for a domain. This way you can ensure that switching to proxy-based
      configuration will not lead to downtime for your instance.

      The `proxy_url` parameter allows for testing proxy configurations for domains that don't have a proxy URL yet, or operate on
      a different proxy URL than the one provided. It can also be used to re-validate a domain that is already configured to work with a proxy.
    operationId: VerifyDomainProxy
    tags:
      - Proxy checks
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              domain_id:
                type: string
                description: The ID of the domain that will be updated.
              proxy_url:
                type: string
                description: The full URL of the proxy which will forward requests to the Clerk Frontend API for this domain. e.g. https://example.com/__clerk
    responses:
      200:
        $ref: "../responses/2021-02-05/ProxyCheck.yml#/components/responses/ProxyCheck"
      400:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      422:
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"
#
# REDIRECT URLs
#

RedirectURLs:
  get:
    summary: List all redirect URLs
    description: Lists all whitelisted redirect_urls for the instance
    operationId: ListRedirectURLs
    tags:
      - Redirect URLs
    responses:
      "200":
        $ref: "../responses/2021-02-05/RedirectURL.yml#/components/responses/RedirectURL.List"
  post:
    summary: Create a redirect URL
    description: Create a redirect URL
    operationId: CreateRedirectURL
    tags:
      - Redirect URLs
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              url:
                type: string
                description: |-
                  The full url value prefixed with `https://` or a custom scheme e.g. `"https://my-app.com/oauth-callback"` or `"my-app://oauth-callback"`
                nullable: false
    responses:
      "200":
        $ref: "../responses/2021-02-05/RedirectURL.yml#/components/responses/RedirectURL"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

RedirectURL:
  get:
    summary: Retrieve a redirect URL
    description: Retrieve the details of the redirect URL with the given ID
    operationId: GetRedirectURL
    tags:
      - Redirect URLs
    parameters:
      - name: id
        in: path
        description: The ID of the redirect URL
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/RedirectURL.yml#/components/responses/RedirectURL"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

  delete:
    summary: Delete a redirect URL
    description: Remove the selected redirect URL from the whitelist of the instance
    operationId: DeleteRedirectURL
    tags:
      - Redirect URLs
    parameters:
      - name: id
        in: path
        description: The ID of the redirect URL
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../../../openapi/responses/2021-02-05/DeletedObject.yml#/components/responses/DeletedObject"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# SIGN-IN TOKENS
#

SignInTokens:
  post:
    summary: Create sign-in token
    description: |-
      Creates a new sign-in token and associates it with the given user.
      By default, sign-in tokens expire in 30 days.
      You can optionally supply a different duration in seconds using the `expires_in_seconds` property.
    operationId: CreateSignInToken
    tags:
      - Sign-in Tokens
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                type: string
                description: The ID of the user that can use the newly created sign in token
              expires_in_seconds:
                type: integer
                description: |-
                  Optional parameter to specify the life duration of the sign in token in seconds.
                  By default, the duration is 30 days.
                default: 2592000
    responses:
      "200":
        $ref: "../responses/2021-02-05/SignInToken.yml#/components/responses/SignInToken"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

SignInTokenRevoke:
  post:
    summary: Revoke the given sign-in token
    description: Revokes a pending sign-in token
    operationId: RevokeSignInToken
    tags:
      - Sign-in Tokens
    parameters:
      - name: sign_in_token_id
        in: path
        description: The ID of the sign-in token to be revoked
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/SignInToken.yml#/components/responses/SignInToken"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# SIGN-UPS
#

SignUp:
  patch:
    operationId: UpdateSignUp
    summary: Update a sign-up
    description: Update the sign-up with the given ID
    tags:
      - Sign-ups
    parameters:
      - name: id
        in: path
        description: The ID of the sign-up to update
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              custom_action:
                type: boolean
                description: |-
                  Specifies whether a custom action has run for this sign-up attempt.
                  This is important when your instance has been configured to require a custom action to run before converting a sign-up into a user.
                  After executing any external business logic you deem necessary, you can mark the sign-up as ready-to-convert by setting `custom_action` to `true`.
              external_id:
                type: string
                description: |-
                  The ID of the guest attempting to sign up as used in your external systems or your previous authentication solution.
                  This will be copied to the resulting user when the sign-up is completed.
                nullable: true
    responses:
      "200":
        $ref: "../responses/2021-02-05/SignUp.yml#/components/responses/SignUp"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"

#
# OAUTH APPLICATIONS
#

OAuthApplications:
  get:
    operationId: ListOAuthApplications
    summary: Get a list of OAuth applications for an instance
    description: |-
      This request returns the list of OAuth applications for an instance.
      Results can be paginated using the optional `limit` and `offset` query parameters.
      The OAuth applications are ordered by descending creation date.
      Most recent OAuth applications will be returned first.
    tags:
      - OAuth Applications
    parameters:
      - $ref: "#/components/parameters/LimitParameter"
      - $ref: "#/components/parameters/OffsetParameter"
    responses:
      "200":
        $ref: "../responses/2021-02-05/OAuthApplication.yml#/components/responses/OAuthApplications"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"
  post:
    operationId: CreateOAuthApplication
    summary: Create an OAuth application
    description: |-
      Creates a new OAuth application with the given name and callback URL for an instance.
      The callback URL must be a valid url.
      All URL schemes are allowed such as `http://`, `https://`, `myapp://`, etc...
    tags:
      - OAuth Applications
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the new OAuth application
              callback_url:
                type: string
                description: The callback URL of the new OAuth application
              scopes:
                type: string
                description: |-
                  Define the allowed scopes for the new OAuth applications that dictate the user payload of the OAuth user info endpoint. Available scopes are `profile`, `email`, `public_metadata`, `private_metadata`. Provide the requested scopes as a string, separated by spaces.
                default: "profile email"
                example: "profile email public_metadata"
              public:
                type: boolean
                description: |-
                  If true, this client is public and cannot securely store a client secret.
                  Only the authorization code flow with proof key for code exchange (PKCE) may be used.
                  Public clients cannot be updated to be confidential clients, and vice versa.
            required:
              - name
              - callback_url
    responses:
      "200":
        $ref: "../responses/2021-02-05/OAuthApplication.yml#/components/responses/OAuthApplicationWithSecret"
      "400":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ClerkErrors"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

OAuthApplication:
  get:
    operationId: GetOAuthApplication
    summary: Retrieve an OAuth application by ID
    description: |-
      Fetches the OAuth application whose ID matches the provided `id` in the path.
    tags:
      - OAuth Applications
    parameters:
      - in: path
        name: oauth_application_id
        required: true
        schema:
          type: string
        description: The ID of the OAuth application
    responses:
      "200":
        $ref: "../responses/2021-02-05/OAuthApplication.yml#/components/responses/OAuthApplication"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

  patch:
    operationId: UpdateOAuthApplication
    summary: Update an OAuth application
    description: Updates an existing OAuth application
    tags:
      - OAuth Applications
    parameters:
      - in: path
        name: oauth_application_id
        required: true
        schema:
          type: string
        description: The ID of the OAuth application to update
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              name:
                type: string
                description: The new name of the OAuth application
              callback_url:
                type: string
                description: The new callback URL of the OAuth application
              scopes:
                type: string
                description: |-
                  Define the allowed scopes for the new OAuth applications that dictate the user payload of the OAuth user info endpoint. Available scopes are `profile`, `email`, `public_metadata`, `private_metadata`. Provide the requested scopes as a string, separated by spaces.
                default: "profile email"
                example: "profile email public_metadata private_metadata"
    responses:
      "200":
        $ref: "../responses/2021-02-05/OAuthApplication.yml#/components/responses/OAuthApplication"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

  delete:
    operationId: DeleteOAuthApplication
    summary: Delete an OAuth application
    description: |-
      Deletes the given OAuth application.
      This is not reversible.
    tags:
      - OAuth Applications
    parameters:
      - in: path
        name: oauth_application_id
        required: true
        schema:
          type: string
        description: The ID of the OAuth application to delete
    responses:
      "200":
        $ref: "../../../openapi/responses/2021-02-05/DeletedObject.yml#/components/responses/DeletedObject"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

OAuthApplicationRotateSecret:
  post:
    operationId: RotateOAuthApplicationSecret
    summary: Rotate the client secret of the given OAuth application
    description: |-
      Rotates the OAuth application's client secret.
      When the client secret is rotated, make sure to update it in authorized OAuth clients.
    tags:
      - OAuth Applications
    parameters:
      - name: oauth_application_id
        in: path
        description: The ID of the OAuth application for which to rotate the client secret
        required: true
        schema:
          type: string
    responses:
      "200":
        $ref: "../responses/2021-02-05/OAuthApplication.yml#/components/responses/OAuthApplicationWithSecret"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# SAML CONNECTIONS
#

SAMLConnections:
  get:
    operationId: ListSAMLConnections
    summary: Get a list of SAML Connections for an instance
    description: |-
      Returns the list of SAML Connections for an instance.
      Results can be paginated using the optional `limit` and `offset` query parameters.
      The SAML Connections are ordered by descending creation date and the most recent will be returned first.
    tags:
      - SAML Connections
    parameters:
      - $ref: "#/components/parameters/LimitParameter"
      - $ref: "#/components/parameters/OffsetParameter"
    responses:
      "200":
        $ref: "../responses/2021-02-05/SAMLConnection.yml#/components/responses/SAMLConnections"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

  post:
    operationId: CreateSAMLConnection
    summary: Create a SAML Connection
    description: Create a new SAML Connection.
    tags:
      - SAML Connections
    requestBody:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              name:
                type: string
                description: The name to use as a label for this SAML Connection
              domain:
                type: string
                description: The domain of your organization. Sign in flows using an email with this domain, will use this SAML Connection.
              provider:
                type: string
                description: The IdP provider of the connection.
                enum:
                  - saml_custom
                  - saml_okta
                  - saml_google
                  - saml_microsoft
              idp_entity_id:
                type: string
                description: The Entity ID as provided by the IdP
                nullable: true
              idp_sso_url:
                type: string
                description: The Single-Sign On URL as provided by the IdP
                nullable: true
              idp_certificate:
                type: string
                description: The X.509 certificate as provided by the IdP
                nullable: true
              idp_metadata_url:
                type: string
                description: The URL which serves the IdP metadata. If present, it takes priority over the corresponding individual properties
                nullable: true
              idp_metadata:
                type: string
                description: The XML content of the IdP metadata file. If present, it takes priority over the corresponding individual properties
                nullable: true
              attribute_mapping:
                type: object
                description: Define the attribute name mapping between Identity Provider and Clerk's user properties
                nullable: true
                additionalProperties: false
                properties:
                  user_id:
                    type: string
                  email_address:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
            required:
              - name
              - domain
              - provider
    responses:
      "200":
        $ref: "../responses/2021-02-05/SAMLConnection.yml#/components/responses/SAMLConnection"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

SAMLConnection:
  get:
    operationId: GetSAMLConnection
    summary: Retrieve a SAML Connection by ID
    description: Fetches the SAML Connection whose ID matches the provided `saml_connection_id` in the path.
    tags:
      - SAML Connections
    parameters:
      - in: path
        name: saml_connection_id
        required: true
        schema:
          type: string
        description: The ID of the SAML Connection
    responses:
      "200":
        $ref: "../responses/2021-02-05/SAMLConnection.yml#/components/responses/SAMLConnection"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

  patch:
    operationId: UpdateSAMLConnection
    summary: Update a SAML Connection
    description: Updates the SAML Connection whose ID matches the provided `id` in the path.
    tags:
      - SAML Connections
    parameters:
      - in: path
        name: saml_connection_id
        required: true
        schema:
          type: string
        description: The ID of the SAML Connection to update
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              name:
                type: string
                description: The name of the new SAML Connection
                nullable: true
              domain:
                type: string
                description: The domain to use for the new SAML Connection
                nullable: true
              idp_entity_id:
                type: string
                description: The entity id as provided by the IdP
                nullable: true
              idp_sso_url:
                type: string
                description: The SSO url as provided by the IdP
                nullable: true
              idp_certificate:
                type: string
                description: The x509 certificated as provided by the IdP
                nullable: true
              idp_metadata_url:
                type: string
                description: The URL which serves the IdP metadata. If present, it takes priority over the corresponding individual properties and replaces them
                nullable: true
              idp_metadata:
                type: string
                description: The XML content of the IdP metadata file. If present, it takes priority over the corresponding individual properties
                nullable: true
              attribute_mapping:
                type: object
                description: Define the atrtibute name mapping between Identity Provider and Clerk's user properties
                nullable: true
                additionalProperties: false
                properties:
                  user_id:
                    type: string
                  email_address:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
              active:
                type: boolean
                description: Activate or de-activate the SAML Connection
                nullable: true
              sync_user_attributes:
                type: boolean
                description: Controls whether to update the user's attributes in each sign-in
                nullable: true
              allow_subdomains:
                type: boolean
                description: Allow users with an email address subdomain to use this connection in order to authenticate
                nullable: true
              allow_idp_initiated:
                type: boolean
                description: Enable or deactivate IdP-initiated flows
                nullable: true
    responses:
      "200":
        $ref: "../responses/2021-02-05/SAMLConnection.yml#/components/responses/SAMLConnection"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"
      "422":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/UnprocessableEntity"

  delete:
    operationId: DeleteSAMLConnection
    summary: Delete a SAML Connection
    description: Deletes the SAML Connection whose ID matches the provided `id` in the path.
    tags:
      - SAML Connections
    parameters:
      - in: path
        name: saml_connection_id
        required: true
        schema:
          type: string
        description: The ID of the SAML Connection to delete
    responses:
      "200":
        $ref: "../../../openapi/responses/2021-02-05/DeletedObject.yml#/components/responses/DeletedObject"
      "402":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/PaymentRequired"
      "403":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/AuthorizationInvalid"
      "404":
        $ref: "../../../openapi/responses/2021-02-05/Error.yml#/components/responses/ResourceNotFound"

#
# TESTING TOKENS
#
TestingTokens:
  post:
    operationId: CreateTestingToken
    summary: Retrieve a new testing token
    description: Retrieve a new testing token. Only available for development instances.
    tags:
      - Testing Tokens
    responses:
      "200":
        $ref: "../responses/2021-02-05/TestingToken.yml#/components/responses/TestingToken"
      "400":
        description: The instance is a production instance, but this endpoint is only available in development instances.
